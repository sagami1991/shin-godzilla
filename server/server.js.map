{"version":3,"sources":["server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import 'source-map-support/register'; // エラー時、tsファイルの行数を教える\r\nimport {createServer}  from 'http';\r\nimport * as express from 'express';\r\nimport {Server as WebSocketServer} from 'ws';\r\nimport {MongoClient, Db} from 'mongodb';\r\nimport {MainController} from \"./websocket/MainController\";\r\nimport {ChatController} from \"./websocket/ChatController\";\r\nimport {InfoMsgController} from \"./websocket/InfoMsgController\";\r\nimport {GameController} from \"./websocket/GameController\";\r\nimport {RankingController} from \"./websocket/RankingController\";\r\nimport {UserService} from \"./service/UserService\";\r\n\r\n/** DBに接続 */\r\nfunction connectDB(): Promise<Db> {\r\n\treturn new Promise((resolve) => {\r\n\t\tMongoClient.connect(process.env.MONGODB_URI , (err, db) => {\r\n\t\t\tif (err) throw err;\r\n\t\t\tconst collection = db.collection(process.env.COLLECTION_NAME || \"maplechatlog\");\r\n\t\t\tcollection.count({}, (err, cnt) => {\r\n\t\t\t\tif (cnt <= 10)  return;\r\n\t\t\t\tcollection.find().limit(cnt - 10).sort({ $natural: 1 })\r\n\t\t\t\t.toArray().then((records) => {\r\n\t\t\t\t\tcollection.remove({_id: {$in: records.map(record => record._id)}});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tresolve(db);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport class MongoWrapper {\r\n\tconstructor(private db: Db) {}\r\n\tpublic getCollection(collectionName: string) {\r\n\t\treturn this.db.collection(collectionName);\r\n\t}\r\n}\r\n\r\nconnectDB().then((db) => {\r\n\tconst mongo = new MongoWrapper(db);\r\n\tconst server = createServer();\r\n\tconst app = express();\r\n\tapp.use(express.static(__dirname + '/../dist'));\r\n\tconst userService = new UserService(mongo);\r\n\tconst main = new MainController(new WebSocketServer({ server: server }));\r\n\tmain.init();\r\n\tnew ChatController(main, mongo).init();\r\n\tnew GameController(main, userService).init();\r\n\tnew RankingController(main, userService).init();\r\n\tnew InfoMsgController(main).init();\r\n\r\n\tserver.on('request', app);\r\n\tserver.listen(process.env.PORT || 3000, () => {\r\n\t\tconsole.log('Server listening on port %s', server.address().port);\r\n\t});\r\n\r\n\tsetInterval( () => {\r\n\t\tconsole.log(`memory log: ${process.memoryUsage().heapUsed} byte of Heap`);\r\n\t}, 60 * 1000);\r\n});"],"sourceRoot":"/source/"}
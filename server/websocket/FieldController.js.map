{"version":3,"sources":["websocket/FieldController.ts"],"names":[],"mappings":";AAEA,sBAAoC,gBAAgB,CAAC,CAAA;AACrD;IAEC,yBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IACnC,CAAC;IAEM,8BAAI,GAAX;QAAA,iBAEC;QADA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAU,CAAC,KAAK,EAAE,UAAC,EAAE,EAAE,IAAI,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAlC,CAAkC,CAAC,CAAA;IAC5F,CAAC;IACO,6CAAmB,GAA3B,UAA4B,EAAa,EAAE,IAAe;QACzD,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACjB,IAAI,EAAE,kBAAU,CAAC,KAAK;YACtB,KAAK,EAAE,eAAe,CAAC,MAAM;SAC7B,CAAC,CAAC;IACJ,CAAC;IAba,sBAAM,GAAc,iBAAS,CAAC,OAAO,CAAC;IAcrD,sBAAC;AAAD,CAfA,AAeC,IAAA;AAfY,uBAAe,kBAe3B,CAAA","file":"websocket/FieldController.js","sourcesContent":["import * as WebSocket from 'ws';\r\nimport {WSWrapper} from \"./WebSocketWrapper\";\r\nimport {SocketType, FieldType} from \"../share/share\";\r\nexport class FieldController {\r\n\tpublic static bgType: FieldType = FieldType.henesys;\r\n\tconstructor(private main: WSWrapper) {\r\n\t}\r\n\r\n\tpublic init() {\r\n\t\tthis.main.addMsgListner(SocketType.field, (ws, data) => this.sendFieldTypeForAll(ws, data))\r\n\t}\r\n\tprivate sendFieldTypeForAll(ws: WebSocket, type: FieldType) {\r\n\t\tFieldController.bgType = type;\r\n\t\tthis.main.sendAll({\r\n\t\t\ttype: SocketType.field,\r\n\t\t\tvalue: FieldController.bgType\r\n\t\t});\r\n\t}\r\n}"],"sourceRoot":"/source/"}
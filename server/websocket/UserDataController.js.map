{"version":3,"sources":["websocket/UserDataController.ts"],"names":[],"mappings":";AAEA,sBAA6E,gBAAgB,CAAC,CAAA;AAE9F,IAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AAEnC;IAYC,4BAAoB,SAAoB,EAC7B,WAAwB;QADf,cAAS,GAAT,SAAS,CAAW;QAC7B,gBAAW,GAAX,WAAW,CAAa;QAHnC,cAAc;QACN,aAAQ,GAAiC,EAAE,CAAC;IAG9C,CAAC;IAEA,iCAAI,GAAX;QAAA,iBAmBC;QAlBA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,kBAAU,CAAC,IAAI,EAAE,UAAC,EAAE,EAAE,OAAO,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC/F,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,kBAAU,CAAC,UAAU,EAAE,UAAC,EAAE,EAAE,OAAO,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,EAA5B,CAA4B,CAAC,CAAC;QACnG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,kBAAU,CAAC,IAAI,EAAE,UAAC,EAAE,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAb,CAAa,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,kBAAU,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAhB,CAAgB,CAAC,CAAC;QAC3E,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,UAAC,EAAE;YACjC,IAAM,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;oBACtC,OAAO,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;YACJ,CAAC;YACD,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,WAAW,CAAC;YACX,GAAG,CAAC,CAAuB,UAA6B,EAA7B,KAAA,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,EAA7B,cAA6B,EAA7B,IAA6B,CAAC;gBAApD,eAAkB,EAAb,cAAM,EAAE,YAAI;gBACrB,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAClC;QACF,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IACf,CAAC;IAEM,oCAAO,GAAd,UAAe,EAAa;QAC3B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IAEM,wCAAW,GAAlB,UAAmB,EAAa;QAC/B,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YACd,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;gBACb,IAAI,CAAC,EAAE,EAAG,CAAC;gBACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7C,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5E,CAAC;IACF,CAAC;IAEO,oCAAO,GAAf,UAAgB,EAAa;QAC5B,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAEO,iCAAI,GAAZ,UAAa,EAAa;QACzB,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5E,CAAC;IACF,CAAC;IAEO,oCAAO,GAAf,UAAgB,EAAa;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5E,CAAC;IACF,CAAC;IAEO,wCAAW,GAAnB,UAAoB,EAAa,EAAE,EAAU;QAC5C,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrC,CAAC;IAEO,uCAAU,GAAlB,UAAmB,EAAa,EAAE,OAAmB;QACpD,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACvB,CAAC;IACF,CAAC;IAED,oBAAoB;IACZ,+CAAkB,GAA1B,UAA2B,EAAa,EAAE,OAAmB;QAC5D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;IACnH,CAAC;IAEO,yCAAY,GAApB,UAAqB,EAAa,EAAE,OAAsB;QAA1D,iBAYC;QAXA,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YACnE,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,wCAAa,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAG,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzE,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBAC/C,KAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvF,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAEO,wCAAW,GAAnB,UAAoB,EAAa,EAAE,IAAgB;QAClD,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEO,2CAAc,GAAtB,UAAuB,MAAc;QACpC,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,MAAM,EAAC,EAAE,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAC3G,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC;IACpB,CAAC;IAEO,uCAAU,GAAlB,UAAmB,EAAU;QAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,aAAK,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IAEO,2CAAc,GAAtB,UAAuB,IAAgB;QACtC,MAAM,CAAC;YACN,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,IAAI,EAAE;SAChB,CAAC;IACH,CAAC;IAnIc,gCAAa,GAAG;QAC9B,GAAG,EAAE,CAAC;QACN,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,IAAI;KACV,CAAC;IAkIH,yBAAC;AAAD,CAvIA,AAuIC,IAAA;AAvIY,0BAAkB,qBAuI9B,CAAA","file":"websocket/UserDataController.js","sourcesContent":["import * as WebSocket from 'ws';\r\nimport {WSWrapper} from \"./WebSocketWrapper\";\r\nimport {SocketType, InitialUserData, DbUserData, CONST, MasterEvilData} from \"../share/share\";\r\nimport {UserService} from \"../service/UserService\";\r\nimport * as shortid from \"shortid\";\r\n\r\nexport class UserDataController {\r\n\tprivate static INIT_USERDATA = {\r\n\t\texp: 0,\r\n\t\tlv: 1,\r\n\t\tname: \"名前\"\r\n\t};\r\n\tpublic onLvUp: (personId: string) => void;\r\n\tpublic onFirstConnect: (ws: WebSocket, user: DbUserData) => void;\r\n\tpublic onClose: (ws: WebSocket) => void;\r\n\tpublic onSave: (ws: WebSocket, user: DbUserData) => void;\r\n\t// パーソナルに持つデータ\r\n\tprivate userData: {[dbId: string]: DbUserData} = {};\r\n\tconstructor(private wsWrapper: WSWrapper,\r\n\t\t\t\tprivate userService: UserService,\r\n\t\t\t\t) {}\r\n\r\n\tpublic init() {\r\n\t\tthis.wsWrapper.addMsgListner(SocketType.init, (ws, reqData) => this.firstConnect(ws, reqData));\r\n\t\tthis.wsWrapper.addMsgListner(SocketType.changeName, (ws, reqData) => this.changeName(ws, reqData));\r\n\t\tthis.wsWrapper.addMsgListner(SocketType.dead, (ws) => this.dead(ws));\r\n\t\tthis.wsWrapper.addMsgListner(SocketType.resetLv, (ws) => this.resetLv(ws));\r\n\t\tthis.wsWrapper.addCloseListner((ws) => {\r\n\t\t\tconst user = this.userData[this.getDbId(ws)];\r\n\t\t\tif (user) {\r\n\t\t\t\tthis.userService.updateUser(user).then(() => {\r\n\t\t\t\t\tdelete this.userData[this.getDbId(ws)];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.onClose(ws);\r\n\t\t});\r\n\t\tsetInterval(() => {\r\n\t\t\tfor (let [ipAddr, user] of Object.entries(this.userData)) {\r\n\t\t\t\tthis.userService.updateUser(user);\r\n\t\t\t}\r\n\t\t}, 30 * 1000);\r\n\t}\r\n\r\n\tpublic getUser(ws: WebSocket) {\r\n\t\treturn this.userData[this.getDbId(ws)];\r\n\t}\r\n\r\n\tpublic increaseExp(ws: WebSocket) {\r\n\t\tconst user = this.userData[this.getDbId(ws)];\r\n\t\tif (user) {\r\n\t\t\tuser.exp += 2;\r\n\t\t\tif (user.exp > this.calcMaxExp(user.lv)) {\r\n\t\t\t\tuser.exp = 0;\r\n\t\t\t\tuser.lv ++;\r\n\t\t\t\tthis.onLvUp(this.wsWrapper.getPersonId(ws));\r\n\t\t\t}\r\n\t\t\tthis.wsWrapper.send(ws, SocketType.userData, {lv: user.lv, exp: user.exp});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getDbId(ws: WebSocket) {\r\n\t\treturn ws.upgradeReq.headers[\"db-id\"];\r\n\t}\r\n\r\n\tprivate dead(ws: WebSocket) {\r\n\t\tconst user = this.userData[this.getDbId(ws)];\r\n\t\tif (user) {\r\n\t\t\tuser.exp -= Math.floor(this.calcMaxExp(user.lv) / 8);\r\n\t\t\tuser.exp = user.exp < 0 ? 0 : user.exp;\r\n\t\t\tthis.wsWrapper.send(ws, SocketType.userData, {lv: user.lv, exp: user.exp});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate resetLv(ws: WebSocket) {\r\n\t\tconst user = this.userData[this.getDbId(ws)];\r\n\t\tif (user) {\r\n\t\t\tuser.lv = 1;\r\n\t\t\tuser.exp = 0;\r\n\t\t\tthis.wsWrapper.send(ws, SocketType.userData, {lv: user.lv, exp: user.exp});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setDbIdToWs(ws: WebSocket, id: string) {\r\n\t\tws.upgradeReq.headers[\"db-id\"] = id;\r\n\t}\r\n\r\n\tprivate changeName(ws: WebSocket, reqData: DbUserData) {\r\n\t\tconst user = this.userData[this.getDbId(ws)];\r\n\t\tif (user && reqData.name.length <= 8) {\r\n\t\t\tuser.name = reqData.name;\r\n\t\t\tthis.onSave(ws, user);\r\n\t\t}\r\n\t}\r\n\r\n\t// ユーザーからのアクセスでは使わない\r\n\tprivate saveUserDataMemory(ws: WebSocket, reqData: DbUserData) {\r\n\t\tthis.userData[this.getDbId(ws)] = Object.assign(this.filterUserData(reqData), {ip: this.wsWrapper.getIpAddr(ws)});\r\n\t}\r\n\r\n\tprivate firstConnect(ws: WebSocket, reqData: {_id: string}) {\r\n\t\tthis.userService.containBanList(this.wsWrapper.getIpAddr(ws)).catch(() => {\r\n\t\t\tws.close(1008, `違反者接続 ip: ${this.wsWrapper.getIpAddr(ws)}`);\r\n\t\t});\r\n\r\n\t\tif (!reqData._id) {\r\n\t\t\tthis.setUserData(ws, this.createInitUser(this.wsWrapper.getIpAddr(ws)));\r\n\t\t} else {\r\n\t\t\tthis.userService.getUser(reqData._id).then((user) => {\r\n\t\t\t\tthis.setUserData(ws, user ? user : this.createInitUser(this.wsWrapper.getIpAddr(ws)));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setUserData(ws: WebSocket, user: DbUserData) {\r\n\t\tthis.setDbIdToWs(ws, user._id);\r\n\t\tthis.saveUserDataMemory(ws, user);\r\n\t\tthis.onFirstConnect(ws, user);\r\n\t}\r\n\r\n\tprivate createInitUser(ipAddr: string): DbUserData {\r\n\t\tconst initialData = Object.assign({_id: shortid.generate(), ip: ipAddr}, UserDataController.INIT_USERDATA);\r\n\t\tthis.userService.createUser(initialData);\r\n\t\treturn initialData;\r\n\t}\r\n\r\n\tprivate calcMaxExp(lv: number) {\r\n\t\treturn Math.floor(CONST.USER.BASE_EXP * Math.pow(CONST.USER.EXP_BAIRITU, lv - 1));\r\n\t}\r\n\r\n\tprivate filterUserData(user: DbUserData): DbUserData {\r\n\t\treturn {\r\n\t\t\t_id: user._id,\r\n\t\t\tip: user.ip,\r\n\t\t\tlv: user.lv,\r\n\t\t\tname: user.name,\r\n\t\t\texp: user.exp,\r\n\t\t\tdate: new Date()\r\n\t\t};\r\n\t}\r\n\r\n\r\n}"],"sourceRoot":"/source/"}
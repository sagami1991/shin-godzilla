{"version":3,"sources":["websocket/GodzillaController.ts"],"names":[],"mappings":"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","file":"websocket/GodzillaController.js","sourcesContent":["import * as WebSocket from 'ws';\r\nimport {MainController} from \"./MainController\";\r\nimport {GameController, Zahyou} from \"./GameController\";\r\nimport {SocketType} from \"../share/share\";\r\n\r\nexport interface GodzillaInfo {\r\n\thp: number;\r\n\tmode: GodzillaMode;\r\n\ttarget: {x: number, y: number}[];\r\n}\r\n\r\nenum GodzillaMode {\r\n\tinit,\r\n\tbeforeAtk,\r\n\tatk,\r\n\tatkEnd,\r\n\tdead\r\n}\r\n\r\nexport class GodzillaController {\r\n\tprivate static ACTION_INFO = [\r\n\t\t{sec: 1, mode: GodzillaMode.init},\r\n\t\t{sec: 0.8, mode: GodzillaMode.beforeAtk},\r\n\t\t{sec: 1.6, mode: GodzillaMode.atk},\r\n\t\t{sec: Infinity, mode: GodzillaMode.atkEnd}\r\n\t];\r\n\r\n\tprivate _godzilla: GodzillaInfo;\r\n\tprivate actionFrameCount: number;\r\n\tprivate atkCount: any = {};\r\n\tprivate isDecidedTarget: boolean;\r\n\tget godzilla() {\r\n\t\treturn this._godzilla;\r\n\t}\r\n\r\n\tconstructor(private main: MainController, private evils: Zahyou[]) {\r\n\t}\r\n\r\n\tpublic init() {\r\n\t\tthis._godzilla = {\r\n\t\t\thp: 4000,\r\n\t\t\tmode: GodzillaMode.init,\r\n\t\t\ttarget: Array.from(new Array(2)).map( () => {return {x: 0, y: 0}; })\r\n\t\t};\r\n\t\tthis.main.addMsgListner(SocketType.gozzilaDamege, (ws, reqData) => this.onAtkGodzilla(ws));\r\n\t\tthis.actionFrameCount = 0;\r\n\t}\r\n\r\n\tpublic roopAction() {\r\n\t\tthis.actionFrameCount ++;\r\n\t\tlet baseFrame = 0;\r\n\t\tfor (const actionInfo of GodzillaController.ACTION_INFO) {\r\n\t\t\tbaseFrame += actionInfo.sec * GameController.FRAME;\r\n\t\t\tif (this.actionFrameCount < baseFrame) {\r\n\t\t\t\tthis._godzilla.mode = actionInfo.mode;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tswitch (this._godzilla.mode) {\r\n\t\tcase GodzillaMode.beforeAtk:\r\n\t\t\tif (!this.isDecidedTarget) this.decideTarget();\r\n\t\t\tbreak;\r\n\t\tcase GodzillaMode.atkEnd:\r\n\t\t\tthis.isDecidedTarget = false;\r\n\t\t\tthis.actionFrameCount = 0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onAtkGodzilla(ws: WebSocket) {\r\n\t\tconst skey = this.main.getSercretKey(ws);\r\n\t\tthis.atkCount[skey] = this.atkCount[skey] ? this.atkCount[skey] + 1 : 1;\r\n\t\tif (this.atkCount[skey] > 100) ws.close();\r\n\t\tthis._godzilla.hp -= 2;\r\n\t}\r\n\r\n\tprivate decideTarget() {\r\n\t\tconst livedEvils = this.evils.filter(evil => !evil.isDead);\r\n\t\tconst targetEvils = livedEvils.length ? livedEvils : this.evils;\r\n\t\tconst targets = Array.from(new Array(2)).map(() => {\r\n\t\t\tconst targetEvil = GameController.getRandom(targetEvils);\r\n\t\t\treturn targetEvil ? {x: targetEvil.x + 50, y: targetEvil.y + 30} : {x: 0, y: 0};\r\n\t\t});\r\n\t\tthis._godzilla.target = targets;\r\n\t\tthis.isDecidedTarget = true;\r\n\t}\r\n}"],"sourceRoot":"/source/"}
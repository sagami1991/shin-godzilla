{"version":3,"sources":["websocket/GodzillaController.ts"],"names":[],"mappings":"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","file":"websocket/GodzillaController.js","sourcesContent":["import * as WebSocket from 'ws';\r\nimport {WSWrapper} from \"./WebSocketWrapper\";\r\nimport {GameController} from \"./GameController\";\r\nimport {SocketType, ReqEvilData, GodzillaMode, GodzillaInfo} from \"../share/share\";\r\n\r\nexport class GodzillaController {\r\n\tprivate static ACTION_INFO = [\r\n\t\t{sec: 1, mode: GodzillaMode.init},\r\n\t\t{sec: 0.8, mode: GodzillaMode.beforeAtk},\r\n\t\t{sec: 1.6, mode: GodzillaMode.atk},\r\n\t\t{sec: Infinity, mode: GodzillaMode.atkEnd}\r\n\t];\r\n\r\n\tprivate _godzilla: GodzillaInfo;\r\n\tprivate actionFrameCount: number;\r\n\tprivate isDecidedTarget: boolean;\r\n\tget godzilla() {\r\n\t\treturn this._godzilla;\r\n\t}\r\n\r\n\tconstructor(private wsWrapper: WSWrapper, private evils: ReqEvilData[]) {\r\n\t}\r\n\r\n\tpublic init() {\r\n\t\tthis._godzilla = {\r\n\t\t\thp: 4000,\r\n\t\t\tmode: GodzillaMode.init,\r\n\t\t\ttarget: Array.from(new Array(2)).map( () => {return {x: 0, y: 0}; })\r\n\t\t};\r\n\t\tthis.actionFrameCount = 0;\r\n\t}\r\n\r\n\tpublic roopAction() {\r\n\t\tthis.actionFrameCount ++;\r\n\t\tlet baseFrame = 0;\r\n\t\tfor (const actionInfo of GodzillaController.ACTION_INFO) {\r\n\t\t\tbaseFrame += actionInfo.sec * GameController.SEND_FPS;\r\n\t\t\tif (this.actionFrameCount < baseFrame) {\r\n\t\t\t\tthis._godzilla.mode = actionInfo.mode;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tswitch (this._godzilla.mode) {\r\n\t\tcase GodzillaMode.beforeAtk:\r\n\t\t\tif (!this.isDecidedTarget) this.decideTarget();\r\n\t\t\tbreak;\r\n\t\tcase GodzillaMode.atkEnd:\r\n\t\t\tthis.isDecidedTarget = false;\r\n\t\t\tthis.actionFrameCount = 0;\r\n\t\t\tGodzillaController.ACTION_INFO[0].sec = Math.floor(0.6 + Math.random() * 10) * 0.1;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic damage(damage: number) {\r\n\t\tthis._godzilla.hp -= 2;\r\n\t}\r\n\r\n\tprivate decideTarget() {\r\n\t\tconst livedEvils = this.evils.filter(evil => !evil.isDead && evil.x > 200);\r\n\t\tconst deadEvils = this.evils.filter(evil => evil.x > 200);\r\n\t\tconst targetEvils = livedEvils.length ? livedEvils : deadEvils;\r\n\t\tconst targets = Array.from(new Array(2)).map(() => {\r\n\t\t\tconst targetEvil = GameController.getRandom(targetEvils);\r\n\t\t\treturn targetEvil ? {x: targetEvil.x + 50, y: targetEvil.y + 30} : {x: 0, y: 0};\r\n\t\t});\r\n\t\tthis._godzilla.target = targets;\r\n\t\tthis.isDecidedTarget = true;\r\n\t}\r\n}"],"sourceRoot":"/source/"}
{"version":3,"sources":["websocket/MainController.ts"],"names":[],"mappings":"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","file":"websocket/MainController.js","sourcesContent":["import * as WebSocket from 'ws';\r\nimport {Collection, Db} from 'mongodb';\r\nimport {SocketType, ReqEvilData} from \"../share/share\";\r\n\r\ninterface Msglistner {\r\n\ttype: SocketType;\r\n\tcb: (ws: WebSocket, data: any) => void;\r\n}\r\n\r\nexport interface ReqData {\r\n\ttype: SocketType;\r\n\tvalue: any;\r\n}\r\n\r\ninterface SendAllOption {\r\n\tmyWs?: WebSocket;\r\n\tisSelfSend?: boolean;\r\n\ttype: SocketType;\r\n\tvalue: any;\r\n}\r\n\r\nexport class MainController {\r\n\tprivate wss: WebSocket.Server;\r\n\tprivate onConnectListners: Array<(ws: WebSocket) => void > = [];\r\n\tprivate onMsgListners: Msglistner[] = [];\r\n\tprivate onCloseListners: Array<(ws: WebSocket) => void > = [];\r\n\r\n\tconstructor(wss: WebSocket.Server) {\r\n\t\tthis.wss = wss;\r\n\t}\r\n\r\n\tpublic addConnectListner(cb: (ws: WebSocket) => void) {\r\n\t\tthis.onConnectListners.push(cb);\r\n\t}\r\n\r\n\tpublic addMsgListner(type: SocketType, cb: (ws: WebSocket, data: any) => void) {\r\n\t\tthis.onMsgListners.push({type: type, cb: cb});\r\n\t}\r\n\r\n\tpublic addCloseListner(cb: (ws: WebSocket) => void) {\r\n\t\tthis.onCloseListners.push(cb);\r\n\t}\r\n\r\n\tpublic init() {\r\n\t\tthis.wss.on('connection', (ws) => {\r\n\t\t\tthis.onConnectListners.forEach(cb => cb(ws));\r\n\t\t\tws.on('message', (data, flags) => this.onReqData(ws, data, flags));\r\n\t\t\tws.on(\"close\", (code, message) => {\r\n\t\t\t\tconsole.log(`onclose code: ${code}, msg: ${message}`);\r\n\t\t\t\tthis.onCloseListners.forEach(cb => cb(ws));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// TODO このキー普通にデータにのせて大丈夫か\r\n\tpublic getSercretKey(ws: WebSocket) {\r\n\t\treturn ws.upgradeReq.headers[\"sec-websocket-key\"];\r\n\t}\r\n\r\n\tpublic send(ws: WebSocket, type: SocketType, data: any) {\r\n\t\ttry {\r\n\t\t\tws.send(JSON.stringify({type: type, value: data}));\r\n\t\t} catch (e) {\r\n\t\t\tconsole.trace(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/** 全員に送る */\r\n\tpublic sendAll(opt: SendAllOption) {\r\n\t\tthis.wss.clients.forEach(ws => {\r\n\t\t\tif (!opt.isSelfSend && opt.myWs === ws) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tws.send(JSON.stringify({\r\n\t\t\t\t\ttype: opt.type,\r\n\t\t\t\t\tvalue: opt.value\r\n\t\t\t\t}));\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.trace(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * でーた受け取り時\r\n\t */\r\n\tprivate onReqData(ws: WebSocket, data: any, flags: {binary: boolean}) {\r\n\t\tif (!this.validateReqData(data, flags.binary)) {\r\n\t\t\tws.close(1008, \"不正なデータ検出\");\r\n\t\t\tconsole.log(this.getSercretKey(ws));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (flags.binary) return;\r\n\t\tconst reqData = <ReqData> JSON.parse(data);\r\n\t\tthis.onMsgListners.forEach(msgLister => {reqData.type === msgLister.type ? msgLister.cb(ws, reqData.value) : null; });\r\n\r\n\t}\r\n\r\n\tprivate validateReqData(data: string, isBinary: boolean) {\r\n\t\tif (!isBinary) {\r\n\t\t\tif (data.length > 500) return false;\r\n\t\t\tconst resData = <ReqData> JSON.parse(data);\r\n\r\n\t\t\tif (typeof resData.type !== \"number\") {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (resData.type === SocketType.gozzilaDamege) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (resData.type === SocketType.chatLog && resData.value.length > 50) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (resData.type === SocketType.zahyou) {\r\n\t\t\t\tconst evilInfo = <ReqEvilData> resData.value;\r\n\t\t\t\tfor (let num of [evilInfo.lv, evilInfo.x, evilInfo.y, evilInfo.maxExp]){\r\n\t\t\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\t\t}\r\n\t\t\t\tif (evilInfo.y < 140 ||  300 < evilInfo.y ) return false;\r\n\r\n\t\t\t\t// バグの原因\r\n\t\t\t\tif (evilInfo.maxExp !== Math.floor(50 * Math.pow(1.2, evilInfo.lv - 1))) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}"],"sourceRoot":"/source/"}